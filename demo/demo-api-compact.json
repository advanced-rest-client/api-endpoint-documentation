{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:declares": [
    {
      "@id": "amf://id#1",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "deprecated",
      "raml-shapes:schema": {
        "@id": "amf://id#2",
        "@type": [
          "raml-shapes:ScalarShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:datatype": {
          "@id": "xsd:string"
        },
        "shacl:name": "deprecated"
      }
    },
    {
      "@id": "amf://id#3",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "annotationTest",
      "raml-shapes:schema": {
        "@id": "amf://id#4",
        "@type": [
          "raml-shapes:NilShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "shacl:name": "annotationTest"
      }
    },
    {
      "@id": "amf://id#5",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "clearanceLevel",
      "raml-shapes:schema": {
        "@id": "amf://id#6",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": false,
        "shacl:name": "schema",
        "shacl:property": [
          {
            "@id": "amf://id#7",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#8",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#8/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#9",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "low"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#10",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "medium"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#11",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "high"
                  }
                }
              },
              "shacl:name": "level"
            },
            "shacl:minCount": 1,
            "shacl:name": "level",
            "shacl:path": {
              "@id": "data:level"
            }
          },
          {
            "@id": "amf://id#12",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#13",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "signature"
            },
            "shacl:minCount": 1,
            "shacl:name": "signature",
            "shacl:path": {
              "@id": "data:signature"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#14",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "A response that is errored",
      "shacl:closed": false,
      "shacl:name": "ErrorResource",
      "shacl:property": [
        {
          "@id": "amf://id#17",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#18",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#20",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#21",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Indicate that the response is errored.",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#19",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "shacl:defaultValueStr": "true",
            "shacl:name": "error"
          },
          "shacl:minCount": 1,
          "shacl:name": "error",
          "shacl:path": {
            "@id": "data:error"
          }
        },
        {
          "@id": "amf://id#22",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#23",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The error message associated with the error.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "message"
          },
          "shacl:minCount": 1,
          "shacl:name": "message",
          "shacl:path": {
            "@id": "data:message"
          }
        }
      ]
    },
    {
      "@id": "amf://id#26",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#27",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#29",
          "@type": "data:Object",
          "data:birthday": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "1983-10-20"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
            }
          },
          "data:gender": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "male"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "R34fg663H9KW9MMSKISI"
            }
          },
          "data:image": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "data:language": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "en_GB"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel Psztyc"
            }
          },
          "data:tagline": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Some text about me."
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc"
            }
          }
        },
        "shacl:raw": "  id: \"R34fg663H9KW9MMSKISI\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n"
      },
      "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
      "schema-org:name": "A person resource",
      "shacl:closed": false,
      "shacl:name": "AppPerson",
      "shacl:property": [
        {
          "@id": "amf://id#30",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#31",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#32",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#33",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The brief description (tagline) of this person.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "tagline"
          },
          "shacl:minCount": 1,
          "shacl:name": "tagline",
          "shacl:path": {
            "@id": "data:tagline"
          }
        },
        {
          "@id": "amf://id#34",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#35",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#36",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#37",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "John Smith"
                }
              },
              "shacl:raw": "John Smith"
            },
            "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name",
            "shacl:pattern": "^[0-9a-zA-Z ]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#38",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#39",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of this person's profile.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#40",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#41",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The user's preferred language for rendering.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "language"
          },
          "shacl:minCount": 1,
          "shacl:name": "language",
          "shacl:path": {
            "@id": "data:language"
          }
        },
        {
          "@id": "amf://id#42",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#43",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#44",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#45",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "birthday"
          },
          "shacl:minCount": 1,
          "shacl:name": "birthday",
          "shacl:path": {
            "@id": "data:birthday"
          }
        },
        {
          "@id": "amf://id#46",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#47",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#48",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#49",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#50",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#51",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#52",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#53",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "image",
          "shacl:path": {
            "@id": "data:image"
          }
        },
        {
          "@id": "amf://id#56",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#57",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "gender?"
          },
          "shacl:minCount": 0,
          "shacl:name": "gender",
          "shacl:path": {
            "@id": "data:gender"
          }
        }
      ]
    },
    {
      "@id": "amf://id#63",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "Common properties for all resources returned by the API.\n",
      "shacl:closed": false,
      "shacl:name": "Resource",
      "shacl:property": {
        "@id": "amf://id#30",
        "@type": [
          "shacl:PropertyShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "raml-shapes:range": {
          "@id": "amf://id#31",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "etag"
        },
        "shacl:minCount": 1,
        "shacl:name": "etag",
        "shacl:path": {
          "@id": "data:etag"
        }
      }
    },
    {
      "@id": "amf://id#66",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": [
        {
          "@id": "amf://id#89",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#90",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\d3deef3rgrgf4r"
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Acme Product"
              }
            },
            "data:quantity": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "200"
              }
            },
            "data:unit": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ml"
              }
            },
            "data:upc": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123456789101"
              }
            }
          },
          "schema-org:name": "example_0",
          "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\sd3deef3rgrgf4r\"\n"
        },
        {
          "@id": "amf://id#91",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#92",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W/\"686897696a7c876b7e\""
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "d697f5cea85011e680f576304dec7eb7"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Super product"
              }
            },
            "data:quantity": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "125"
              }
            },
            "data:unit": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ml"
              }
            },
            "data:upc": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123456789101"
              }
            }
          },
          "http://a.ml/vocabularies/document-source-maps#sources": {
            "@id": "amf://id#91/source-map",
            "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
            "http://a.ml/vocabularies/document-source-maps#tracked-element": {
              "http://a.ml/vocabularies/document-source-maps#element": "amf://id#91",
              "http://a.ml/vocabularies/document-source-maps#value": "amf://id#93"
            }
          },
          "schema-org:name": "Product",
          "shacl:raw": "\n                id: d697f5cea85011e680f576304dec7eb7\n                name: Super product\n                quantity: 125\n                unit: ml\n                upc: \"123456789101\"\n                available: true\n                etag: \"W/\\\"686897696a7c876b7e\\\"\"\n"
        },
        {
          "@id": "amf://id#94",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#95",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W/\"123456789\""
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123e4567e89b12d3a456426655440000"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Acme Product"
              }
            },
            "data:quantity": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "1"
              }
            },
            "data:unit": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "kg"
              }
            },
            "data:upc": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "223456789101"
              }
            }
          },
          "http://a.ml/vocabularies/document-source-maps#sources": {
            "@id": "amf://id#94/source-map",
            "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
            "http://a.ml/vocabularies/document-source-maps#tracked-element": {
              "http://a.ml/vocabularies/document-source-maps#element": "amf://id#94",
              "http://a.ml/vocabularies/document-source-maps#value": "amf://id#93"
            }
          },
          "schema-org:name": "OtherProduct",
          "shacl:raw": "\n                id: 123e4567e89b12d3a456426655440000\n                name: Acme Product\n                quantity: 1\n                unit: kg\n                upc: \"223456789101\"\n                available: true\n                etag: \"W/\\\"123456789\\\"\"\n"
        }
      ],
      "schema-org:description": "A single product representing an item in the store.",
      "schema-org:name": "A product resource",
      "shacl:closed": false,
      "shacl:name": "Product",
      "shacl:property": [
        {
          "@id": "amf://id#67",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#68",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#69",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#70",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "042100005264"
                }
              },
              "shacl:raw": "042100005264"
            },
            "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "upc",
            "shacl:pattern": "^[0-9]{12,12}$"
          },
          "shacl:minCount": 1,
          "shacl:name": "upc",
          "shacl:path": {
            "@id": "data:upc"
          }
        },
        {
          "@id": "amf://id#30",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#31",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#71",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#72",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#73",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#74",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme product - mentol flavor, 500 ml."
                }
              },
              "shacl:raw": "Acme product - mentol flavor, 500 ml."
            },
            "schema-org:description": "Product name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#75",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#76",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id",
            "shacl:pattern": "^[0-9a-zA-Z-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#77",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#78",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#79",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#80",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "shacl:raw": "ml"
            },
            "schema-org:description": "The unit of measuremet for the quantity property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "unit"
          },
          "shacl:minCount": 1,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        },
        {
          "@id": "amf://id#81",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#82",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#83",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#84",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "available"
          },
          "shacl:minCount": 1,
          "shacl:name": "available",
          "shacl:path": {
            "@id": "data:available"
          }
        },
        {
          "@id": "amf://id#85",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#86",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#87",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#88",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "500"
                }
              },
              "shacl:raw": "500"
            },
            "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "quantity"
          },
          "shacl:minCount": 1,
          "shacl:name": "quantity",
          "shacl:path": {
            "@id": "data:quantity"
          }
        }
      ]
    },
    {
      "@id": "amf://id#47",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#48",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#49",
          "@type": "data:Object",
          "data:thumb": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image"
            }
          }
        },
        "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
      },
      "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
      "shacl:closed": false,
      "shacl:name": "image",
      "shacl:property": [
        {
          "@id": "amf://id#50",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#51",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#52",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#53",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
            "schema-org:name": "Thumbnail",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "thumb"
          },
          "shacl:minCount": 1,
          "shacl:name": "thumb",
          "shacl:path": {
            "@id": "data:thumb"
          }
        }
      ]
    },
    {
      "@id": "amf://id#100",
      "@type": [
        "raml-shapes:ScalarShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "A feature to test enum values in the URI parameters.",
      "shacl:datatype": {
        "@id": "xsd:string"
      },
      "shacl:in": {
        "@id": "amf://id#100/list",
        "@type": "rdfs:Seq",
        "rdfs:_1": {
          "@id": "amf://id#101",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "A"
          }
        },
        "rdfs:_2": {
          "@id": "amf://id#102",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "B"
          }
        },
        "rdfs:_3": {
          "@id": "amf://id#103",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "C"
          }
        }
      },
      "shacl:name": "Feature"
    },
    {
      "@id": "amf://id#104",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#105",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3",
            "@type": "data:Object",
            "data:404": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_7",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Not found response"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_10",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Not found response"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schema-org:name": "ResourceNotFound"
    },
    {
      "@id": "amf://id#107",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#108",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3",
            "@type": "data:Object",
            "data:404": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6/scalar_7",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Unauthorized response"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_10",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Unauthorized response"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schema-org:name": "UnauthorizedResponse"
    },
    {
      "@id": "amf://id#109",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#110",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3",
            "@type": "data:Object",
            "data:400": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_9",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_13",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
                }
              }
            }
          }
        }
      },
      "schema-org:name": "RequestErrorResponse"
    },
    {
      "@id": "amf://id#28",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#112",
        "@type": "data:Object",
        "data:description": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "The collection of <<resourcePathName>>."
          }
        },
        "data:queryParameters": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
          "@type": "data:Object",
          "data:limit": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Limit in the response list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "100"
              }
            },
            "data:maximum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "300"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "1"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          },
          "data:nextPageToken": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19",
            "@type": "data:Object",
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_22",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_21",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
              }
            },
            "data:pattern": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_23",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "[a-zA-Z0-9]+"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_24",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_20",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "string"
              }
            }
          },
          "data:start": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_17",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_14",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The start entry of the list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_16",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_15",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_18",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_13",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          }
        },
        "data:responses": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25",
          "@type": "data:Object",
          "data:200": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29",
                "@type": "data:Object",
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31",
                  "@type": "data:Object",
                  "data:items": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_35",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Contains a list of objects for this method."
                      }
                    },
                    "data:items": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_36",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "<<resourceType>>"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_34",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_33",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "array"
                      }
                    }
                  },
                  "data:nextPageToken": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_41",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_40",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_39",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_38",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/scalar_30",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/scalar_27",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
              }
            }
          },
          "data:400": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45",
                "@type": "data:Object",
                "data:displayName": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_46",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Invalid"
                  }
                },
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48",
                  "@type": "data:Object",
                  "data:error": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_53",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Indicate that the response is errored."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_52",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_51",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_50",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "boolean"
                      }
                    }
                  },
                  "data:message": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_56",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error message associated with the error."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_57",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_58",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_55",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_47",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/scalar_43",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
              }
            }
          }
        }
      },
      "doc:variable": [
        "resourceType",
        "resourcePathName"
      ],
      "schema-org:name": "trait"
    },
    {
      "@id": "amf://id#114",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#115",
        "@type": "data:Object",
        "data:description": {
          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "Use this to mark a resource that can be changed only by users with admin level."
          }
        },
        "data:responses": {
          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
          "@type": "data:Object",
          "data:200": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:headers": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
              "@type": "data:Object",
              "data:X-Amin-Resource": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                "@type": "data:Object",
                "data:default": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:description": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "This header is not set if the resource can be changed by non-admin users."
                  }
                },
                "data:displayName": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Admin resource mark header"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "boolean"
                  }
                }
              }
            }
          },
          "data:401": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
            "@type": "data:Object",
            "data:description": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
              }
            }
          }
        }
      },
      "schema-org:name": "trait"
    },
    {
      "@id": "amf://id#120",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#121",
        "@type": "data:Object",
        "data:securedBy": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/Testable/object_1/array_2",
          "@type": [
            "data:Array",
            "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
          ],
          "data:pos0": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/Testable/object_1/array_2/scalar_3"
          },
          "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/Testable/object_1/array_2/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "x-custom"
            }
          }
        }
      },
      "schema-org:name": "Testable"
    },
    {
      "@id": "amf://id#123",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:header": {
        "@id": "amf://id#124",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "header",
        "raml-http:paramName": "authorization",
        "raml-http:schema": {
          "@id": "amf://id#125",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "doc:examples": {
            "@id": "amf://id#126",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#127",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ya.2453vfDb3cJHisdf.*&H"
              }
            },
            "http://a.ml/vocabularies/document-source-maps#sources": {
              "@id": "amf://id#126/source-map",
              "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
              "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                "http://a.ml/vocabularies/document-source-maps#element": "amf://id#126",
                "http://a.ml/vocabularies/document-source-maps#value": "amf://id#124"
              }
            },
            "shacl:raw": "ya.2453vfDb3cJHisdf.*&H"
          },
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
        "schema-org:name": "authorization",
        "hydra:required": false
      },
      "raml-http:parameter": {
        "@id": "amf://id#128",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "query",
        "raml-http:paramName": "access_token",
        "raml-http:schema": {
          "@id": "amf://id#129",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
        "schema-org:name": "access_token",
        "hydra:required": false
      },
      "security:name": "oauth_2_0",
      "security:settings": {
        "@id": "amf://id#136",
        "@type": [
          "security:OAuth2Settings",
          "security:Settings",
          "doc:DomainElement"
        ],
        "security:accessTokenUri": "http://api.domain.com/oauth2/token",
        "security:authorizationGrant": [
          "authorization_code",
          "implicit"
        ],
        "security:authorizationUri": "http://api.domain.com/oauth2/auth",
        "security:scope": [
          {
            "@id": "amf://id#137",
            "@type": [
              "security:Scope",
              "doc:DomainElement"
            ],
            "security:name": "profile"
          },
          {
            "@id": "amf://id#138",
            "@type": [
              "security:Scope",
              "doc:DomainElement"
            ],
            "security:name": "email"
          }
        ]
      },
      "security:type": "OAuth 2.0",
      "schema-org:description": "This API supports OAuth 2.0 for authenticating all API requests.",
      "hydra:response": [
        {
          "@id": "amf://id#130",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "raml-http:payload": {
            "@id": "amf://id#131",
            "@type": [
              "raml-http:Payload",
              "doc:DomainElement"
            ],
            "raml-http:mediaType": "application/json",
            "raml-http:schema": {
              "@id": "amf://id#132",
              "@type": [
                "raml-shapes:AnyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "shacl:name": "schema"
            }
          },
          "schema-org:description": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user.",
          "schema-org:name": "401",
          "hydra:statusCode": "401"
        },
        {
          "@id": "amf://id#133",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "raml-http:payload": {
            "@id": "amf://id#134",
            "@type": [
              "raml-http:Payload",
              "doc:DomainElement"
            ],
            "raml-http:mediaType": "application/json",
            "raml-http:schema": {
              "@id": "amf://id#135",
              "@type": [
                "raml-shapes:AnyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "shacl:name": "schema"
            }
          },
          "schema-org:description": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here.",
          "schema-org:name": "403",
          "hydra:statusCode": "403"
        }
      ]
    },
    {
      "@id": "amf://id#140",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:header": {
        "@id": "amf://id#141",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "header",
        "raml-http:paramName": "SpecialToken",
        "raml-http:schema": {
          "@id": "amf://id#142",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Used to send a custom token.\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Used to send a custom token.\n",
        "schema-org:name": "SpecialToken",
        "hydra:required": true
      },
      "raml-http:parameter": [
        {
          "@id": "amf://id#143",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "debugToken",
          "raml-http:schema": {
            "@id": "amf://id#144",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#144/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#145",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Info"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#146",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Log"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#147",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Warning"
                }
              },
              "rdfs:_4": {
                "@id": "amf://id#148",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Error"
                }
              },
              "rdfs:_5": {
                "@id": "amf://id#149",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Critical"
                }
              }
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
          "schema-org:name": "debugToken",
          "hydra:required": false
        },
        {
          "@id": "amf://id#150",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "booleanToken",
          "raml-http:schema": {
            "@id": "amf://id#151",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Just to test boolean values.",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#152",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "shacl:defaultValueStr": "true",
            "shacl:name": "schema"
          },
          "schema-org:description": "Just to test boolean values.",
          "schema-org:name": "booleanToken",
          "hydra:required": true
        }
      ],
      "security:name": "x-custom",
      "security:type": "x-custom",
      "schema-org:description": "A custom security scheme for authenticating requests.\n",
      "hydra:response": [
        {
          "@id": "amf://id#153",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "schema-org:description": "Bad token.\n",
          "schema-org:name": "401",
          "hydra:statusCode": "401"
        },
        {
          "@id": "amf://id#154",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "schema-org:name": "403",
          "hydra:statusCode": "403"
        }
      ]
    },
    {
      "@id": "amf://id#156",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "security:name": "basic",
      "security:type": "Basic Authentication",
      "schema-org:description": "This API supports Basic Authentication for staging environment.\n"
    },
    {
      "@id": "amf://id#47",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#48",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#49",
          "@type": "data:Object",
          "data:thumb": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image"
            }
          }
        },
        "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
      },
      "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
      "shacl:closed": false,
      "shacl:name": "image",
      "shacl:property": [
        {
          "@id": "amf://id#50",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#51",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#52",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#53",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
            "schema-org:name": "Thumbnail",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "thumb"
          },
          "shacl:minCount": 1,
          "shacl:name": "thumb",
          "shacl:path": {
            "@id": "data:thumb"
          }
        }
      ]
    }
  ],
  "doc:encodes": {
    "@id": "amf://id#183",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:endpoint": [
      {
        "@id": "amf://id#184",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "amf://id#5": {
          "@id": "amf://id#251",
          "@type": "data:Object",
          "data:level": {
            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/clearanceLevel/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "high"
            }
          },
          "data:signature": {
            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/clearanceLevel/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "test"
            }
          },
          "doc:name": "clearanceLevel"
        },
        "doc:customDomainProperties": {
          "@id": "amf://id#5"
        },
        "doc:extends": [
          {
            "@id": "amf://id#185",
            "@type": [
              "doc:ParametrizedTrait",
              "doc:ParametrizedDeclaration",
              "doc:DomainElement"
            ],
            "doc:target": {
              "@id": "amf://id#114",
              "@type": [
                "doc:Trait",
                "doc:AbstractDeclaration",
                "doc:DomainElement"
              ],
              "doc:dataNode": {
                "@id": "amf://id#115",
                "@type": "data:Object",
                "data:description": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Use this to mark a resource that can be changed only by users with admin level."
                  }
                },
                "data:responses": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
                  "@type": "data:Object",
                  "data:200": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
                    "@type": "data:Object",
                    "data:headers": {
                      "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
                      "@type": "data:Object",
                      "data:X-Amin-Resource": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                        "@type": "data:Object",
                        "data:default": {
                          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:boolean",
                            "@value": "false"
                          }
                        },
                        "data:description": {
                          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "This header is not set if the resource can be changed by non-admin users."
                          }
                        },
                        "data:displayName": {
                          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Admin resource mark header"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "data:401": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
                      }
                    }
                  }
                }
              },
              "schema-org:name": "trait"
            },
            "schema-org:name": "Adminable"
          },
          {
            "@id": "amf://id#186",
            "@type": [
              "doc:ParametrizedTrait",
              "doc:ParametrizedDeclaration",
              "doc:DomainElement"
            ],
            "doc:target": {
              "@id": "amf://id#120",
              "@type": [
                "doc:Trait",
                "doc:AbstractDeclaration",
                "doc:DomainElement"
              ],
              "doc:dataNode": {
                "@id": "amf://id#121",
                "@type": "data:Object",
                "data:securedBy": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/Testable/object_1/array_2",
                  "@type": [
                    "data:Array",
                    "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
                  ],
                  "data:pos0": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/Testable/object_1/array_2/scalar_3"
                  },
                  "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/Testable/object_1/array_2/scalar_3",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "x-custom"
                    }
                  }
                }
              },
              "schema-org:name": "Testable"
            },
            "schema-org:name": "Testable"
          },
          {
            "@id": "amf://id#15",
            "@type": [
              "doc:ParametrizedResourceType",
              "doc:ParametrizedDeclaration",
              "doc:DomainElement"
            ],
            "doc:target": {
              "@id": "amf://id#104",
              "@type": [
                "doc:ResourceType",
                "doc:AbstractDeclaration",
                "doc:DomainElement"
              ],
              "doc:dataNode": {
                "@id": "amf://id#105",
                "@type": "data:Object",
                "data:get": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2",
                  "@type": "data:Object",
                  "data:responses": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3",
                    "@type": "data:Object",
                    "data:404": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4",
                      "@type": "data:Object",
                      "data:body": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5",
                        "@type": "data:Object",
                        "data:application%2Fjson": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6",
                          "@type": "data:Object",
                          "data:displayName": {
                            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_7",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "Not found response"
                            }
                          },
                          "data:type": {
                            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_8",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "ErrorResource"
                            }
                          }
                        },
                        "data:application%2Fxml": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9",
                          "@type": "data:Object",
                          "data:displayName": {
                            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_10",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "Not found response"
                            }
                          },
                          "data:example": {
                            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_12",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
                            }
                          },
                          "data:type": {
                            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_11",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schema-org:name": "ResourceNotFound"
            },
            "schema-org:name": "ResourceNotFound"
          }
        ],
        "raml-http:path": "/people",
        "schema-org:description": "An endpoint to operate on a person model.\n\nYou can create, update, read or delete a person resource from the\nsystem.\n",
        "schema-org:name": "People",
        "hydra:supportedOperation": {
          "@id": "amf://id#187",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "doc:extends": {
            "@id": "amf://id#188",
            "@type": [
              "doc:ParametrizedTrait",
              "doc:ParametrizedDeclaration",
              "doc:DomainElement"
            ],
            "doc:target": {
              "@id": "amf://id#28",
              "@type": [
                "doc:Trait",
                "doc:AbstractDeclaration",
                "doc:DomainElement"
              ],
              "doc:dataNode": {
                "@id": "amf://id#112",
                "@type": "data:Object",
                "data:description": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "The collection of <<resourcePathName>>."
                  }
                },
                "data:queryParameters": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
                  "@type": "data:Object",
                  "data:limit": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
                    "@type": "data:Object",
                    "data:default": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_10",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "25"
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_6",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Limit in the response list"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_9",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "100"
                      }
                    },
                    "data:maximum": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_7",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "300"
                      }
                    },
                    "data:minimum": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_8",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "1"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_11",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "false"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "number"
                      }
                    }
                  },
                  "data:nextPageToken": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_22",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_21",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "data:pattern": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_23",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "[a-zA-Z0-9]+"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_24",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "false"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_20",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  },
                  "data:start": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12",
                    "@type": "data:Object",
                    "data:default": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_17",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "0"
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_14",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The start entry of the list"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_16",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "25"
                      }
                    },
                    "data:minimum": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_15",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "0"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_18",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "false"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_13",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "number"
                      }
                    }
                  }
                },
                "data:responses": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25",
                  "@type": "data:Object",
                  "data:200": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29",
                        "@type": "data:Object",
                        "data:properties": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31",
                          "@type": "data:Object",
                          "data:items": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_35",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Contains a list of objects for this method."
                              }
                            },
                            "data:items": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_36",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "<<resourceType>>"
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_34",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_33",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "array"
                              }
                            }
                          },
                          "data:nextPageToken": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_41",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                              }
                            },
                            "data:example": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_40",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_39",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_38",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "string"
                              }
                            }
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/scalar_30",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "object"
                          }
                        }
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/scalar_27",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
                      }
                    }
                  },
                  "data:400": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_46",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid"
                          }
                        },
                        "data:properties": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48",
                          "@type": "data:Object",
                          "data:error": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_53",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Indicate that the response is errored."
                              }
                            },
                            "data:example": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_52",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_51",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_50",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "boolean"
                              }
                            }
                          },
                          "data:message": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_56",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "The error message associated with the error."
                              }
                            },
                            "data:example": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_57",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_58",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_55",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "string"
                              }
                            }
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_47",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "object"
                          }
                        }
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/scalar_43",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
                      }
                    }
                  }
                }
              },
              "doc:variable": [
                "resourceType",
                "resourcePathName"
              ],
              "schema-org:name": "trait"
            },
            "doc:variable": {
              "@id": "amf://id#189",
              "@type": [
                "doc:VariableValue",
                "doc:DomainElement"
              ],
              "doc:name": "resourceType",
              "doc:value": {
                "@id": "amf://id#190",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "AppPerson"
                }
              }
            },
            "schema-org:name": "Paginated"
          },
          "security:security": {
            "@id": "amf://id#249",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "x-custom",
            "security:scheme": {
              "@id": "amf://id#140",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#141",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "SpecialToken",
                "raml-http:schema": {
                  "@id": "amf://id#142",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Used to send a custom token.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "Used to send a custom token.\n",
                "schema-org:name": "SpecialToken",
                "hydra:required": true
              },
              "raml-http:parameter": [
                {
                  "@id": "amf://id#143",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "query",
                  "raml-http:paramName": "debugToken",
                  "raml-http:schema": {
                    "@id": "amf://id#144",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:in": {
                      "@id": "amf://id#144/list",
                      "@type": "rdfs:Seq",
                      "rdfs:_1": {
                        "@id": "amf://id#145",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Info"
                        }
                      },
                      "rdfs:_2": {
                        "@id": "amf://id#146",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Log"
                        }
                      },
                      "rdfs:_3": {
                        "@id": "amf://id#147",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Warning"
                        }
                      },
                      "rdfs:_4": {
                        "@id": "amf://id#148",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Error"
                        }
                      },
                      "rdfs:_5": {
                        "@id": "amf://id#149",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Critical"
                        }
                      }
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                  "schema-org:name": "debugToken",
                  "hydra:required": false
                },
                {
                  "@id": "amf://id#150",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "query",
                  "raml-http:paramName": "booleanToken",
                  "raml-http:schema": {
                    "@id": "amf://id#151",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Just to test boolean values.",
                    "shacl:datatype": {
                      "@id": "xsd:boolean"
                    },
                    "shacl:defaultValue": {
                      "@id": "amf://id#152",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "shacl:defaultValueStr": "true",
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Just to test boolean values.",
                  "schema-org:name": "booleanToken",
                  "hydra:required": true
                }
              ],
              "security:name": "x-custom",
              "security:type": "x-custom",
              "schema-org:description": "A custom security scheme for authenticating requests.\n",
              "hydra:response": [
                {
                  "@id": "amf://id#153",
                  "@type": [
                    "raml-http:Response",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Bad token.\n",
                  "schema-org:name": "401",
                  "hydra:statusCode": "401"
                },
                {
                  "@id": "amf://id#154",
                  "@type": [
                    "raml-http:Response",
                    "doc:DomainElement"
                  ],
                  "schema-org:name": "403",
                  "hydra:statusCode": "403"
                }
              ]
            }
          },
          "schema-org:description": "Use this method to list all people in the system.",
          "schema-org:name": "List people",
          "hydra:expects": {
            "@id": "amf://id#191",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:header": {
              "@id": "amf://id#192",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "amf://id#3": {
                "@id": "amf://id#199",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:nil",
                  "@value": ""
                },
                "doc:name": "annotationTest"
              },
              "doc:customDomainProperties": {
                "@id": "amf://id#3"
              },
              "raml-http:binding": "header",
              "raml-http:paramName": "x-people-op-id",
              "raml-http:schema": {
                "@id": "amf://id#193",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "amf://id#3": {
                  "@id": "amf://id#197",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:nil",
                    "@value": ""
                  },
                  "doc:name": "annotationTest"
                },
                "doc:customDomainProperties": {
                  "@id": "amf://id#3"
                },
                "doc:examples": {
                  "@id": "amf://id#194",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#195",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "9719fa6f-c666-48e0-a191-290890760b30"
                    }
                  },
                  "http://a.ml/vocabularies/document-source-maps#sources": {
                    "@id": "amf://id#194/source-map",
                    "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                    "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                      "http://a.ml/vocabularies/document-source-maps#element": "amf://id#194",
                      "http://a.ml/vocabularies/document-source-maps#value": "amf://id#192"
                    }
                  },
                  "shacl:raw": "9719fa6f-c666-48e0-a191-290890760b30"
                },
                "schema-org:description": "People ops ID. It is UUID v4 string",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "schema",
                "shacl:pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
              },
              "schema-org:description": "People ops ID. It is UUID v4 string",
              "schema-org:name": "x-people-op-id",
              "hydra:required": true
            },
            "raml-http:parameter": [
              {
                "@id": "amf://id#200",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "limit",
                "raml-http:schema": {
                  "@id": "amf://id#201",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#203",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#204",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "100"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#203/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#203",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#205"
                      }
                    },
                    "shacl:raw": "100"
                  },
                  "schema-org:description": "Limit in the response list",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#202",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "25"
                    }
                  },
                  "shacl:defaultValueStr": "25",
                  "shacl:maxInclusive": 300,
                  "shacl:minInclusive": 1,
                  "shacl:name": "schema"
                },
                "schema-org:description": "Limit in the response list",
                "schema-org:name": "limit",
                "hydra:required": false
              },
              {
                "@id": "amf://id#206",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "start",
                "raml-http:schema": {
                  "@id": "amf://id#207",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#209",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#210",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "25"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#209/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#209",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#211"
                      }
                    },
                    "shacl:raw": "25"
                  },
                  "schema-org:description": "The start entry of the list",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#208",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "0"
                    }
                  },
                  "shacl:defaultValueStr": "0",
                  "shacl:minInclusive": 0,
                  "shacl:name": "schema"
                },
                "schema-org:description": "The start entry of the list",
                "schema-org:name": "start",
                "hydra:required": false
              },
              {
                "@id": "amf://id#212",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "nextPageToken",
                "raml-http:schema": {
                  "@id": "amf://id#213",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#214",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#215",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#214/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#214",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#216"
                      }
                    },
                    "shacl:raw": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                  },
                  "schema-org:description": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema",
                  "shacl:pattern": "^[a-zA-Z0-9]+$"
                },
                "schema-org:description": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n",
                "schema-org:name": "nextPageToken",
                "hydra:required": false
              }
            ]
          },
          "hydra:method": "get",
          "hydra:returns": [
            {
              "@id": "amf://id#217",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:payload": [
                {
                  "@id": "amf://id#218",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#219",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "A response that is errored",
                    "schema-org:name": "Not found response",
                    "shacl:closed": false,
                    "shacl:name": "ErrorResource",
                    "shacl:property": [
                      {
                        "@id": "amf://id#17",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#18",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "doc:examples": {
                            "@id": "amf://id#20",
                            "@type": [
                              "doc:Example",
                              "doc:DomainElement"
                            ],
                            "doc:strict": true,
                            "doc:structuredValue": {
                              "@id": "amf://id#21",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "shacl:raw": "true"
                          },
                          "schema-org:description": "Indicate that the response is errored.",
                          "shacl:datatype": {
                            "@id": "xsd:boolean"
                          },
                          "shacl:defaultValue": {
                            "@id": "amf://id#19",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:boolean",
                              "@value": "true"
                            }
                          },
                          "shacl:defaultValueStr": "true",
                          "shacl:name": "error"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "error",
                        "shacl:path": {
                          "@id": "data:error"
                        }
                      },
                      {
                        "@id": "amf://id#22",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#23",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "The error message associated with the error.",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "message"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "message",
                        "shacl:path": {
                          "@id": "data:message"
                        }
                      }
                    ]
                  }
                },
                {
                  "@id": "amf://id#221",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/xml",
                  "raml-http:schema": {
                    "@id": "amf://id#222",
                    "@type": [
                      "shacl:SchemaShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#223",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#223/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#223",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#224"
                        }
                      },
                      "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
                    },
                    "schema-org:name": "Not found response",
                    "shacl:mediaType": "application/xml",
                    "shacl:name": "schema",
                    "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                  }
                }
              ],
              "schema-org:name": "404",
              "hydra:statusCode": "404"
            },
            {
              "@id": "amf://id#225",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#234",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "X-Amin-Resource",
                "raml-http:schema": {
                  "@id": "amf://id#235",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                  "schema-org:name": "Admin resource mark header",
                  "shacl:datatype": {
                    "@id": "xsd:boolean"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#236",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "false"
                    }
                  },
                  "shacl:defaultValueStr": "false",
                  "shacl:name": "schema"
                },
                "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                "schema-org:name": "X-Amin-Resource",
                "hydra:required": true
              },
              "raml-http:payload": {
                "@id": "amf://id#226",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#227",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:closed": false,
                  "shacl:name": "schema",
                  "shacl:property": [
                    {
                      "@id": "amf://id#228",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#229",
                        "@type": [
                          "raml-shapes:ArrayShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "raml-shapes:items": {
                          "@id": "amf://id#26/linked_1",
                          "@type": [
                            "shacl:NodeShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "doc:link-label": "AppPerson",
                          "doc:link-target": {
                            "@id": "amf://id#26"
                          }
                        },
                        "schema-org:description": "Contains a list of objects for this method.",
                        "shacl:name": "items"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "items",
                      "shacl:path": {
                        "@id": "data:items"
                      }
                    },
                    {
                      "@id": "amf://id#230",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#231",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#232",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#233",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                            }
                          },
                          "shacl:raw": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                        },
                        "schema-org:description": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "nextPageToken"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "nextPageToken",
                      "shacl:path": {
                        "@id": "data:nextPageToken"
                      }
                    }
                  ]
                }
              },
              "schema-org:description": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n",
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            },
            {
              "@id": "amf://id#237",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:payload": {
                "@id": "amf://id#238",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#239",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:name": "Invalid",
                  "shacl:closed": false,
                  "shacl:name": "schema",
                  "shacl:property": [
                    {
                      "@id": "amf://id#240",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#241",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#242",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#243",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:boolean",
                              "@value": "true"
                            }
                          },
                          "shacl:raw": "true"
                        },
                        "schema-org:description": "Indicate that the response is errored.",
                        "shacl:datatype": {
                          "@id": "xsd:boolean"
                        },
                        "shacl:name": "error"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "error",
                      "shacl:path": {
                        "@id": "data:error"
                      }
                    },
                    {
                      "@id": "amf://id#244",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#245",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#246",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#247",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                            }
                          },
                          "shacl:raw": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                        },
                        "schema-org:description": "The error message associated with the error.",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "message"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "message",
                      "shacl:path": {
                        "@id": "data:message"
                      }
                    }
                  ]
                }
              },
              "schema-org:description": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n",
              "schema-org:name": "400",
              "hydra:statusCode": "400"
            },
            {
              "@id": "amf://id#248",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:description": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n",
              "schema-org:name": "401",
              "hydra:statusCode": "401"
            }
          ]
        }
      },
      {
        "@id": "amf://id#252",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "doc:extends": {
          "@id": "amf://id#16",
          "@type": [
            "doc:ParametrizedResourceType",
            "doc:ParametrizedDeclaration",
            "doc:DomainElement"
          ],
          "doc:target": {
            "@id": "amf://id#109",
            "@type": [
              "doc:ResourceType",
              "doc:AbstractDeclaration",
              "doc:DomainElement"
            ],
            "doc:dataNode": {
              "@id": "amf://id#110",
              "@type": "data:Object",
              "data:get": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2",
                "@type": "data:Object",
                "data:responses": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3",
                  "@type": "data:Object",
                  "data:400": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_8",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid request"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_9",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "ErrorResource"
                          }
                        }
                      },
                      "data:application%2Fxml": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_11",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid request"
                          }
                        },
                        "data:example": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_13",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_12",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                          }
                        }
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/scalar_5",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
                      }
                    }
                  }
                }
              }
            },
            "schema-org:name": "RequestErrorResponse"
          },
          "schema-org:name": "RequestErrorResponse"
        },
        "raml-http:parameter": {
          "@id": "amf://id#313",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "personId",
          "raml-http:schema": {
            "@id": "amf://id#314",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#315",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#316",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1234"
                }
              },
              "http://a.ml/vocabularies/document-source-maps#sources": {
                "@id": "amf://id#315/source-map",
                "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                  "http://a.ml/vocabularies/document-source-maps#element": "amf://id#315",
                  "http://a.ml/vocabularies/document-source-maps#value": "amf://id#313"
                }
              },
              "shacl:raw": "1234"
            },
            "schema-org:description": "The ID of the person in the system. It is generated by the database numeric value for the person.",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "The ID of the person in the system. It is generated by the database numeric value for the person.",
          "schema-org:name": "personId",
          "hydra:required": true
        },
        "raml-http:path": "/people/{personId}",
        "schema-org:description": "The endpoint to access information about the person",
        "schema-org:name": "A person",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#253",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "security:security": {
              "@id": "amf://id#284",
              "@type": [
                "security:ParametrizedSecurityScheme",
                "doc:DomainElement"
              ],
              "security:name": "x-custom",
              "security:scheme": {
                "@id": "amf://id#140",
                "@type": [
                  "security:SecurityScheme",
                  "doc:DomainElement"
                ],
                "raml-http:header": {
                  "@id": "amf://id#141",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "header",
                  "raml-http:paramName": "SpecialToken",
                  "raml-http:schema": {
                    "@id": "amf://id#142",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Used to send a custom token.\n",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Used to send a custom token.\n",
                  "schema-org:name": "SpecialToken",
                  "hydra:required": true
                },
                "raml-http:parameter": [
                  {
                    "@id": "amf://id#143",
                    "@type": [
                      "raml-http:Parameter",
                      "doc:DomainElement"
                    ],
                    "raml-http:binding": "query",
                    "raml-http:paramName": "debugToken",
                    "raml-http:schema": {
                      "@id": "amf://id#144",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:in": {
                        "@id": "amf://id#144/list",
                        "@type": "rdfs:Seq",
                        "rdfs:_1": {
                          "@id": "amf://id#145",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Info"
                          }
                        },
                        "rdfs:_2": {
                          "@id": "amf://id#146",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Log"
                          }
                        },
                        "rdfs:_3": {
                          "@id": "amf://id#147",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Warning"
                          }
                        },
                        "rdfs:_4": {
                          "@id": "amf://id#148",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Error"
                          }
                        },
                        "rdfs:_5": {
                          "@id": "amf://id#149",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Critical"
                          }
                        }
                      },
                      "shacl:name": "schema"
                    },
                    "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                    "schema-org:name": "debugToken",
                    "hydra:required": false
                  },
                  {
                    "@id": "amf://id#150",
                    "@type": [
                      "raml-http:Parameter",
                      "doc:DomainElement"
                    ],
                    "raml-http:binding": "query",
                    "raml-http:paramName": "booleanToken",
                    "raml-http:schema": {
                      "@id": "amf://id#151",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Just to test boolean values.",
                      "shacl:datatype": {
                        "@id": "xsd:boolean"
                      },
                      "shacl:defaultValue": {
                        "@id": "amf://id#152",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "shacl:defaultValueStr": "true",
                      "shacl:name": "schema"
                    },
                    "schema-org:description": "Just to test boolean values.",
                    "schema-org:name": "booleanToken",
                    "hydra:required": true
                  }
                ],
                "security:name": "x-custom",
                "security:type": "x-custom",
                "schema-org:description": "A custom security scheme for authenticating requests.\n",
                "hydra:response": [
                  {
                    "@id": "amf://id#153",
                    "@type": [
                      "raml-http:Response",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Bad token.\n",
                    "schema-org:name": "401",
                    "hydra:statusCode": "401"
                  },
                  {
                    "@id": "amf://id#154",
                    "@type": [
                      "raml-http:Response",
                      "doc:DomainElement"
                    ],
                    "schema-org:name": "403",
                    "hydra:statusCode": "403"
                  }
                ]
              }
            },
            "schema-org:description": "Returns a person",
            "schema-org:name": "Get a person",
            "hydra:expects": {
              "@id": "amf://id#254",
              "@type": [
                "raml-http:Request",
                "doc:DomainElement"
              ],
              "raml-http:header": [
                {
                  "@id": "amf://id#255",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "amf://id#1": {
                    "@id": "amf://id#262",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "This will be replaced"
                    },
                    "doc:name": "deprecated"
                  },
                  "doc:customDomainProperties": {
                    "@id": "amf://id#1"
                  },
                  "raml-http:binding": "header",
                  "raml-http:paramName": "x-client-id",
                  "raml-http:schema": {
                    "@id": "amf://id#256",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "amf://id#1": {
                      "@id": "amf://id#260",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "This will be replaced"
                      },
                      "doc:name": "deprecated"
                    },
                    "doc:customDomainProperties": {
                      "@id": "amf://id#1"
                    },
                    "doc:examples": {
                      "@id": "amf://id#257",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#258",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "123456-acme.client.com"
                        }
                      },
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#257/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#257",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#255"
                        }
                      },
                      "shacl:raw": "123456-acme.client.com"
                    },
                    "schema-org:description": "The application id used to make a request. It can be obtained in the developer console.",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "The application id used to make a request. It can be obtained in the developer console.",
                  "schema-org:name": "x-client-id",
                  "hydra:required": true
                },
                {
                  "@id": "amf://id#263",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "amf://id#3": {
                    "@id": "amf://id#270",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:nil",
                      "@value": ""
                    },
                    "doc:name": "annotationTest"
                  },
                  "doc:customDomainProperties": {
                    "@id": "amf://id#3"
                  },
                  "raml-http:binding": "header",
                  "raml-http:paramName": "x-people-op-id",
                  "raml-http:schema": {
                    "@id": "amf://id#264",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "amf://id#3": {
                      "@id": "amf://id#268",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:nil",
                        "@value": ""
                      },
                      "doc:name": "annotationTest"
                    },
                    "doc:customDomainProperties": {
                      "@id": "amf://id#3"
                    },
                    "doc:examples": {
                      "@id": "amf://id#265",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#266",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "9719fa6f-c666-48e0-a191-290890760b30"
                        }
                      },
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#265/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#265",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#263"
                        }
                      },
                      "shacl:raw": "9719fa6f-c666-48e0-a191-290890760b30"
                    },
                    "schema-org:description": "People ops ID. It is UUID v4 string",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "schema",
                    "shacl:pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
                  },
                  "schema-org:description": "People ops ID. It is UUID v4 string",
                  "schema-org:name": "x-people-op-id",
                  "hydra:required": true
                }
              ]
            },
            "hydra:method": "get",
            "hydra:returns": [
              {
                "@id": "amf://id#271",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": [
                  {
                    "@id": "amf://id#272",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#26/linked_2",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:link-label": "AppPerson",
                      "doc:link-target": {
                        "@id": "amf://id#26"
                      }
                    }
                  },
                  {
                    "@id": "amf://id#273",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/xml",
                    "raml-http:schema": {
                      "@id": "amf://id#274",
                      "@type": [
                        "shacl:SchemaShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#275",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:reference-id": {
                          "@id": "amf://id#171"
                        },
                        "doc:strict": true,
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#275/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#275",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#273"
                          }
                        }
                      },
                      "doc:reference-id": {
                        "@id": "amf://id#162"
                      },
                      "shacl:mediaType": "application/xml",
                      "shacl:name": "schema"
                    }
                  }
                ],
                "schema-org:name": "200",
                "hydra:statusCode": "200"
              },
              {
                "@id": "amf://id#276",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": [
                  {
                    "@id": "amf://id#277",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#278",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "A response that is errored",
                      "schema-org:name": "Invalid request",
                      "shacl:closed": false,
                      "shacl:name": "ErrorResource",
                      "shacl:property": [
                        {
                          "@id": "amf://id#17",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#18",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:examples": {
                              "@id": "amf://id#20",
                              "@type": [
                                "doc:Example",
                                "doc:DomainElement"
                              ],
                              "doc:strict": true,
                              "doc:structuredValue": {
                                "@id": "amf://id#21",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "shacl:raw": "true"
                            },
                            "schema-org:description": "Indicate that the response is errored.",
                            "shacl:datatype": {
                              "@id": "xsd:boolean"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#19",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "shacl:defaultValueStr": "true",
                            "shacl:name": "error"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "error",
                          "shacl:path": {
                            "@id": "data:error"
                          }
                        },
                        {
                          "@id": "amf://id#22",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#23",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:description": "The error message associated with the error.",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:name": "message"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "message",
                          "shacl:path": {
                            "@id": "data:message"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "@id": "amf://id#280",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/xml",
                    "raml-http:schema": {
                      "@id": "amf://id#281",
                      "@type": [
                        "shacl:SchemaShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#282",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#282/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#282",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#283"
                          }
                        },
                        "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                      },
                      "schema-org:name": "Invalid request",
                      "shacl:mediaType": "application/xml",
                      "shacl:name": "schema",
                      "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                ],
                "schema-org:description": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data.",
                "schema-org:name": "400",
                "hydra:statusCode": "400"
              }
            ]
          },
          {
            "@id": "amf://id#285",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "security:security": {
              "@id": "amf://id#284",
              "@type": [
                "security:ParametrizedSecurityScheme",
                "doc:DomainElement"
              ],
              "security:name": "x-custom",
              "security:scheme": {
                "@id": "amf://id#140",
                "@type": [
                  "security:SecurityScheme",
                  "doc:DomainElement"
                ],
                "raml-http:header": {
                  "@id": "amf://id#141",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "header",
                  "raml-http:paramName": "SpecialToken",
                  "raml-http:schema": {
                    "@id": "amf://id#142",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Used to send a custom token.\n",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Used to send a custom token.\n",
                  "schema-org:name": "SpecialToken",
                  "hydra:required": true
                },
                "raml-http:parameter": [
                  {
                    "@id": "amf://id#143",
                    "@type": [
                      "raml-http:Parameter",
                      "doc:DomainElement"
                    ],
                    "raml-http:binding": "query",
                    "raml-http:paramName": "debugToken",
                    "raml-http:schema": {
                      "@id": "amf://id#144",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:in": {
                        "@id": "amf://id#144/list",
                        "@type": "rdfs:Seq",
                        "rdfs:_1": {
                          "@id": "amf://id#145",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Info"
                          }
                        },
                        "rdfs:_2": {
                          "@id": "amf://id#146",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Log"
                          }
                        },
                        "rdfs:_3": {
                          "@id": "amf://id#147",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Warning"
                          }
                        },
                        "rdfs:_4": {
                          "@id": "amf://id#148",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Error"
                          }
                        },
                        "rdfs:_5": {
                          "@id": "amf://id#149",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Critical"
                          }
                        }
                      },
                      "shacl:name": "schema"
                    },
                    "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                    "schema-org:name": "debugToken",
                    "hydra:required": false
                  },
                  {
                    "@id": "amf://id#150",
                    "@type": [
                      "raml-http:Parameter",
                      "doc:DomainElement"
                    ],
                    "raml-http:binding": "query",
                    "raml-http:paramName": "booleanToken",
                    "raml-http:schema": {
                      "@id": "amf://id#151",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Just to test boolean values.",
                      "shacl:datatype": {
                        "@id": "xsd:boolean"
                      },
                      "shacl:defaultValue": {
                        "@id": "amf://id#152",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "shacl:defaultValueStr": "true",
                      "shacl:name": "schema"
                    },
                    "schema-org:description": "Just to test boolean values.",
                    "schema-org:name": "booleanToken",
                    "hydra:required": true
                  }
                ],
                "security:name": "x-custom",
                "security:type": "x-custom",
                "schema-org:description": "A custom security scheme for authenticating requests.\n",
                "hydra:response": [
                  {
                    "@id": "amf://id#153",
                    "@type": [
                      "raml-http:Response",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Bad token.\n",
                    "schema-org:name": "401",
                    "hydra:statusCode": "401"
                  },
                  {
                    "@id": "amf://id#154",
                    "@type": [
                      "raml-http:Response",
                      "doc:DomainElement"
                    ],
                    "schema-org:name": "403",
                    "hydra:statusCode": "403"
                  }
                ]
              }
            },
            "schema-org:description": "Removes the person from the datastore. This method do not returns any data in 200 response.",
            "schema-org:name": "Remove a person",
            "hydra:expects": {
              "@id": "amf://id#286",
              "@type": [
                "raml-http:Request",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#287",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "amf://id#3": {
                  "@id": "amf://id#294",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:nil",
                    "@value": ""
                  },
                  "doc:name": "annotationTest"
                },
                "doc:customDomainProperties": {
                  "@id": "amf://id#3"
                },
                "raml-http:binding": "header",
                "raml-http:paramName": "x-people-op-id",
                "raml-http:schema": {
                  "@id": "amf://id#288",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "amf://id#3": {
                    "@id": "amf://id#292",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:nil",
                      "@value": ""
                    },
                    "doc:name": "annotationTest"
                  },
                  "doc:customDomainProperties": {
                    "@id": "amf://id#3"
                  },
                  "doc:examples": {
                    "@id": "amf://id#289",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#290",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "9719fa6f-c666-48e0-a191-290890760b30"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#289/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#289",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#287"
                      }
                    },
                    "shacl:raw": "9719fa6f-c666-48e0-a191-290890760b30"
                  },
                  "schema-org:description": "People ops ID. It is UUID v4 string",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema",
                  "shacl:pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
                },
                "schema-org:description": "People ops ID. It is UUID v4 string",
                "schema-org:name": "x-people-op-id",
                "hydra:required": true
              }
            },
            "hydra:method": "delete",
            "hydra:returns": {
              "@id": "amf://id#295",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:name": "204",
              "hydra:statusCode": "204"
            }
          },
          {
            "@id": "amf://id#296",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "security:security": {
              "@id": "amf://id#284",
              "@type": [
                "security:ParametrizedSecurityScheme",
                "doc:DomainElement"
              ],
              "security:name": "x-custom",
              "security:scheme": {
                "@id": "amf://id#140",
                "@type": [
                  "security:SecurityScheme",
                  "doc:DomainElement"
                ],
                "raml-http:header": {
                  "@id": "amf://id#141",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "header",
                  "raml-http:paramName": "SpecialToken",
                  "raml-http:schema": {
                    "@id": "amf://id#142",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Used to send a custom token.\n",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Used to send a custom token.\n",
                  "schema-org:name": "SpecialToken",
                  "hydra:required": true
                },
                "raml-http:parameter": [
                  {
                    "@id": "amf://id#143",
                    "@type": [
                      "raml-http:Parameter",
                      "doc:DomainElement"
                    ],
                    "raml-http:binding": "query",
                    "raml-http:paramName": "debugToken",
                    "raml-http:schema": {
                      "@id": "amf://id#144",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:in": {
                        "@id": "amf://id#144/list",
                        "@type": "rdfs:Seq",
                        "rdfs:_1": {
                          "@id": "amf://id#145",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Info"
                          }
                        },
                        "rdfs:_2": {
                          "@id": "amf://id#146",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Log"
                          }
                        },
                        "rdfs:_3": {
                          "@id": "amf://id#147",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Warning"
                          }
                        },
                        "rdfs:_4": {
                          "@id": "amf://id#148",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Error"
                          }
                        },
                        "rdfs:_5": {
                          "@id": "amf://id#149",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Critical"
                          }
                        }
                      },
                      "shacl:name": "schema"
                    },
                    "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                    "schema-org:name": "debugToken",
                    "hydra:required": false
                  },
                  {
                    "@id": "amf://id#150",
                    "@type": [
                      "raml-http:Parameter",
                      "doc:DomainElement"
                    ],
                    "raml-http:binding": "query",
                    "raml-http:paramName": "booleanToken",
                    "raml-http:schema": {
                      "@id": "amf://id#151",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Just to test boolean values.",
                      "shacl:datatype": {
                        "@id": "xsd:boolean"
                      },
                      "shacl:defaultValue": {
                        "@id": "amf://id#152",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "shacl:defaultValueStr": "true",
                      "shacl:name": "schema"
                    },
                    "schema-org:description": "Just to test boolean values.",
                    "schema-org:name": "booleanToken",
                    "hydra:required": true
                  }
                ],
                "security:name": "x-custom",
                "security:type": "x-custom",
                "schema-org:description": "A custom security scheme for authenticating requests.\n",
                "hydra:response": [
                  {
                    "@id": "amf://id#153",
                    "@type": [
                      "raml-http:Response",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Bad token.\n",
                    "schema-org:name": "401",
                    "hydra:statusCode": "401"
                  },
                  {
                    "@id": "amf://id#154",
                    "@type": [
                      "raml-http:Response",
                      "doc:DomainElement"
                    ],
                    "schema-org:name": "403",
                    "hydra:statusCode": "403"
                  }
                ]
              }
            },
            "schema-org:description": "Updates the person in the datastore.",
            "schema-org:name": "Update a person",
            "hydra:expects": {
              "@id": "amf://id#297",
              "@type": [
                "raml-http:Request",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#300",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "amf://id#3": {
                  "@id": "amf://id#307",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:nil",
                    "@value": ""
                  },
                  "doc:name": "annotationTest"
                },
                "doc:customDomainProperties": {
                  "@id": "amf://id#3"
                },
                "raml-http:binding": "header",
                "raml-http:paramName": "x-people-op-id",
                "raml-http:schema": {
                  "@id": "amf://id#301",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "amf://id#3": {
                    "@id": "amf://id#305",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:nil",
                      "@value": ""
                    },
                    "doc:name": "annotationTest"
                  },
                  "doc:customDomainProperties": {
                    "@id": "amf://id#3"
                  },
                  "doc:examples": {
                    "@id": "amf://id#302",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#303",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "9719fa6f-c666-48e0-a191-290890760b30"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#302/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#302",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#300"
                      }
                    },
                    "shacl:raw": "9719fa6f-c666-48e0-a191-290890760b30"
                  },
                  "schema-org:description": "People ops ID. It is UUID v4 string",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema",
                  "shacl:pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
                },
                "schema-org:description": "People ops ID. It is UUID v4 string",
                "schema-org:name": "x-people-op-id",
                "hydra:required": true
              },
              "raml-http:parameter": {
                "@id": "amf://id#298",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "testPatam",
                "raml-http:schema": {
                  "@id": "amf://id#299",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:name": "testPatam",
                "hydra:required": true
              },
              "raml-http:payload": [
                {
                  "@id": "amf://id#308",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#26/linked_3",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:link-label": "AppPerson",
                    "doc:link-target": {
                      "@id": "amf://id#26"
                    }
                  }
                },
                {
                  "@id": "amf://id#309",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/xml",
                  "raml-http:schema": {
                    "@id": "amf://id#310",
                    "@type": [
                      "shacl:SchemaShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#311",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:reference-id": {
                        "@id": "amf://id#171"
                      },
                      "doc:strict": true,
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#311/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#311",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#309"
                        }
                      }
                    },
                    "doc:reference-id": {
                      "@id": "amf://id#162"
                    },
                    "shacl:mediaType": "application/xml",
                    "shacl:name": "schema"
                  }
                }
              ]
            },
            "hydra:method": "put",
            "hydra:returns": {
              "@id": "amf://id#312",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            }
          }
        ]
      },
      {
        "@id": "amf://id#317",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "doc:extends": {
          "@id": "amf://id#318",
          "@type": [
            "doc:ParametrizedTrait",
            "doc:ParametrizedDeclaration",
            "doc:DomainElement"
          ],
          "doc:target": {
            "@id": "amf://id#114",
            "@type": [
              "doc:Trait",
              "doc:AbstractDeclaration",
              "doc:DomainElement"
            ],
            "doc:dataNode": {
              "@id": "amf://id#115",
              "@type": "data:Object",
              "data:description": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Use this to mark a resource that can be changed only by users with admin level."
                }
              },
              "data:responses": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
                "@type": "data:Object",
                "data:200": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
                  "@type": "data:Object",
                  "data:headers": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
                    "@type": "data:Object",
                    "data:X-Amin-Resource": {
                      "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                      "@type": "data:Object",
                      "data:default": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "false"
                        }
                      },
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "This header is not set if the resource can be changed by non-admin users."
                        }
                      },
                      "data:displayName": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Admin resource mark header"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "boolean"
                        }
                      }
                    }
                  }
                },
                "data:401": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
                  "@type": "data:Object",
                  "data:description": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
                    }
                  }
                }
              }
            },
            "schema-org:name": "trait"
          },
          "schema-org:name": "Adminable"
        },
        "raml-http:path": "/products",
        "schema-org:description": "The API is to be used to access data about the products.",
        "schema-org:name": "Products",
        "hydra:supportedOperation": {
          "@id": "amf://id#319",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Creates a product in the store.\nWhile creating a product the `id` and `etag` properties will be ignored.\n\nThe endpoint will reject the request if exactly the same product is already defined in the\ndatastore (all properties of both objects equals). Newly created product is available\nfor listing but **it won't be available for ordering API** until it's availability is not set.\n",
          "schema-org:name": "Create product",
          "hydra:expects": {
            "@id": "amf://id#320",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:payload": [
              {
                "@id": "amf://id#321",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#66/linked_1",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "Product",
                  "doc:link-target": {
                    "@id": "amf://id#66"
                  }
                }
              },
              {
                "@id": "amf://id#322",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/xml",
                "raml-http:schema": {
                  "@id": "amf://id#323",
                  "@type": [
                    "shacl:SchemaShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#324",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:reference-id": {
                      "@id": "amf://id#179"
                    },
                    "doc:strict": true,
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#324/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#324",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#322"
                      }
                    }
                  },
                  "doc:reference-id": {
                    "@id": "amf://id#169"
                  },
                  "shacl:mediaType": "application/xml",
                  "shacl:name": "schema"
                }
              }
            ]
          },
          "hydra:method": "post",
          "hydra:returns": [
            {
              "@id": "amf://id#325",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#329",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "X-Amin-Resource",
                "raml-http:schema": {
                  "@id": "amf://id#330",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                  "schema-org:name": "Admin resource mark header",
                  "shacl:datatype": {
                    "@id": "xsd:boolean"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#331",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "false"
                    }
                  },
                  "shacl:defaultValueStr": "false",
                  "shacl:name": "schema"
                },
                "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                "schema-org:name": "X-Amin-Resource",
                "hydra:required": true
              },
              "raml-http:payload": [
                {
                  "@id": "amf://id#93",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#66/linked_2",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:link-label": "Product",
                    "doc:link-target": {
                      "@id": "amf://id#66"
                    }
                  }
                },
                {
                  "@id": "amf://id#326",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/xml",
                  "raml-http:schema": {
                    "@id": "amf://id#327",
                    "@type": [
                      "shacl:SchemaShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#328",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:reference-id": {
                        "@id": "amf://id#179"
                      },
                      "doc:strict": true,
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#328/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#328",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#326"
                        }
                      }
                    },
                    "doc:reference-id": {
                      "@id": "amf://id#169"
                    },
                    "shacl:mediaType": "application/xml",
                    "shacl:name": "schema"
                  }
                }
              ],
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            },
            {
              "@id": "amf://id#332",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:description": "The request has been rejected. Probably the product already exists in the datastore.",
              "schema-org:name": "400",
              "hydra:statusCode": "400"
            },
            {
              "@id": "amf://id#333",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:description": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n",
              "schema-org:name": "401",
              "hydra:statusCode": "401"
            }
          ]
        }
      },
      {
        "@id": "amf://id#334",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/notypes",
        "hydra:supportedOperation": {
          "@id": "amf://id#335",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:name": "A method",
          "hydra:method": "post"
        }
      },
      {
        "@id": "amf://id#336",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "doc:extends": {
          "@id": "amf://id#337",
          "@type": [
            "doc:ParametrizedTrait",
            "doc:ParametrizedDeclaration",
            "doc:DomainElement"
          ],
          "doc:target": {
            "@id": "amf://id#114",
            "@type": [
              "doc:Trait",
              "doc:AbstractDeclaration",
              "doc:DomainElement"
            ],
            "doc:dataNode": {
              "@id": "amf://id#115",
              "@type": "data:Object",
              "data:description": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Use this to mark a resource that can be changed only by users with admin level."
                }
              },
              "data:responses": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
                "@type": "data:Object",
                "data:200": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
                  "@type": "data:Object",
                  "data:headers": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
                    "@type": "data:Object",
                    "data:X-Amin-Resource": {
                      "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                      "@type": "data:Object",
                      "data:default": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "false"
                        }
                      },
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "This header is not set if the resource can be changed by non-admin users."
                        }
                      },
                      "data:displayName": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Admin resource mark header"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "boolean"
                        }
                      }
                    }
                  }
                },
                "data:401": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
                  "@type": "data:Object",
                  "data:description": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
                    }
                  }
                }
              }
            },
            "schema-org:name": "trait"
          },
          "schema-org:name": "Adminable"
        },
        "raml-http:path": "/traits-only",
        "hydra:supportedOperation": {
          "@id": "amf://id#338",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Use this to mark a resource that can be changed only by users with admin level.",
          "schema-org:name": "A method",
          "hydra:method": "post",
          "hydra:returns": [
            {
              "@id": "amf://id#339",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#340",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "X-Amin-Resource",
                "raml-http:schema": {
                  "@id": "amf://id#341",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                  "schema-org:name": "Admin resource mark header",
                  "shacl:datatype": {
                    "@id": "xsd:boolean"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#342",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "false"
                    }
                  },
                  "shacl:defaultValueStr": "false",
                  "shacl:name": "schema"
                },
                "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                "schema-org:name": "X-Amin-Resource",
                "hydra:required": true
              },
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            },
            {
              "@id": "amf://id#343",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:description": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n",
              "schema-org:name": "401",
              "hydra:statusCode": "401"
            }
          ]
        }
      }
    ],
    "raml-http:server": {
      "@id": "amf://id#344",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "http://{instance}.domain.com/",
      "raml-http:variable": {
        "@id": "amf://id#345",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "path",
        "raml-http:paramName": "instance",
        "raml-http:schema": {
          "@id": "amf://id#346",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "The execution environments. Can be one of:\n- development\n- staging\n- qa\n- production\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:defaultValue": {
            "@id": "amf://id#347",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "production"
            }
          },
          "shacl:defaultValueStr": "production",
          "shacl:in": {
            "@id": "amf://id#346/list",
            "@type": "rdfs:Seq",
            "rdfs:_1": {
              "@id": "amf://id#347",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "development"
              }
            },
            "rdfs:_2": {
              "@id": "amf://id#348",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "staging"
              }
            },
            "rdfs:_3": {
              "@id": "amf://id#349",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "qa"
              }
            },
            "rdfs:_4": {
              "@id": "amf://id#350",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "production"
              }
            }
          },
          "shacl:name": "schema",
          "shacl:pattern": "^(development|staging|qa|production)$"
        },
        "schema-org:description": "The execution environments. Can be one of:\n- development\n- staging\n- qa\n- production\n",
        "schema-org:name": "instance",
        "hydra:required": true
      }
    },
    "schema-org:name": "API body demo",
    "schema-org:version": "v1"
  },
  "doc:references": [
    {
      "@id": "amf://id#158",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#26",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#27",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#29",
            "@type": "data:Object",
            "data:birthday": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "1983-10-20"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\244m4n5kj3gbn2nj4k4n4"
              }
            },
            "data:gender": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "male"
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "R34fg663H9KW9MMSKISI"
              }
            },
            "data:image": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
              "@type": "data:Object",
              "data:thumb": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                }
              },
              "data:url": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image"
                }
              }
            },
            "data:language": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "en_GB"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Pawel Psztyc"
              }
            },
            "data:tagline": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Some text about me."
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc"
              }
            }
          },
          "shacl:raw": "  id: \"R34fg663H9KW9MMSKISI\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n"
        },
        "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
        "schema-org:name": "A person resource",
        "shacl:closed": false,
        "shacl:name": "AppPerson",
        "shacl:property": [
          {
            "@id": "amf://id#30",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#31",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#32",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#33",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The brief description (tagline) of this person.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "tagline"
            },
            "shacl:minCount": 1,
            "shacl:name": "tagline",
            "shacl:path": {
              "@id": "data:tagline"
            }
          },
          {
            "@id": "amf://id#34",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#35",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#36",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#37",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "John Smith"
                  }
                },
                "shacl:raw": "John Smith"
              },
              "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name",
              "shacl:pattern": "^[0-9a-zA-Z ]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#38",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#39",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of this person's profile.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#40",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#41",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The user's preferred language for rendering.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "language"
            },
            "shacl:minCount": 1,
            "shacl:name": "language",
            "shacl:path": {
              "@id": "data:language"
            }
          },
          {
            "@id": "amf://id#42",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#43",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "id"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#44",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#45",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "birthday"
            },
            "shacl:minCount": 1,
            "shacl:name": "birthday",
            "shacl:path": {
              "@id": "data:birthday"
            }
          },
          {
            "@id": "amf://id#46",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#47/linked_1",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:link-label": "image",
              "doc:link-target": {
                "@id": "amf://id#47"
              }
            },
            "shacl:minCount": 1,
            "shacl:name": "image",
            "shacl:path": {
              "@id": "data:image"
            }
          },
          {
            "@id": "amf://id#56",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#57",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "gender?"
            },
            "shacl:minCount": 0,
            "shacl:name": "gender",
            "shacl:path": {
              "@id": "data:gender"
            }
          }
        ]
      },
      "doc:references": [
        {
          "@id": "amf://id#159",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#47",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#48",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#49",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#50",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#51",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#52",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#53",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          }
        },
        {
          "@id": "amf://id#160",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#63",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Common properties for all resources returned by the API.\n",
            "shacl:closed": false,
            "shacl:name": "Resource",
            "shacl:property": {
              "@id": "amf://id#30",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#31",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "etag"
              },
              "shacl:minCount": 1,
              "shacl:name": "etag",
              "shacl:path": {
                "@id": "data:etag"
              }
            }
          }
        }
      ]
    },
    {
      "@id": "amf://id#161",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#162",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"id\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"name\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"birthday\" type=\"xs:date\"></xs:element>\n        <xs:element name=\"gender\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"url\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"image\">\n          <xs:complexType>\n            <xs:sequence>\n              <xs:element name=\"url\" type=\"xs:string\"></xs:element>\n              <xs:element name=\"thumb\" type=\"xs:string\"></xs:element>\n            </xs:sequence>\n          </xs:complexType>\n        </xs:element>\n        <xs:element name=\"tagline\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"language\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"></xs:attribute>\n      <xs:attribute name=\"type\" type=\"xs:string\" use=\"required\"></xs:attribute>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
      }
    },
    {
      "@id": "amf://id#163",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#164",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
      }
    },
    {
      "@id": "amf://id#165",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#140",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:header": {
          "@id": "amf://id#141",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "header",
          "raml-http:paramName": "SpecialToken",
          "raml-http:schema": {
            "@id": "amf://id#142",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Used to send a custom token.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Used to send a custom token.\n",
          "schema-org:name": "SpecialToken",
          "hydra:required": true
        },
        "raml-http:parameter": [
          {
            "@id": "amf://id#143",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "query",
            "raml-http:paramName": "debugToken",
            "raml-http:schema": {
              "@id": "amf://id#144",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#144/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#145",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Info"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#146",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Log"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#147",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Warning"
                  }
                },
                "rdfs:_4": {
                  "@id": "amf://id#148",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Error"
                  }
                },
                "rdfs:_5": {
                  "@id": "amf://id#149",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Critical"
                  }
                }
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
            "schema-org:name": "debugToken",
            "hydra:required": false
          },
          {
            "@id": "amf://id#150",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "query",
            "raml-http:paramName": "booleanToken",
            "raml-http:schema": {
              "@id": "amf://id#151",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Just to test boolean values.",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:defaultValue": {
                "@id": "amf://id#152",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:defaultValueStr": "true",
              "shacl:name": "schema"
            },
            "schema-org:description": "Just to test boolean values.",
            "schema-org:name": "booleanToken",
            "hydra:required": true
          }
        ],
        "security:name": "x-custom",
        "security:type": "x-custom",
        "schema-org:description": "A custom security scheme for authenticating requests.\n",
        "hydra:response": [
          {
            "@id": "amf://id#153",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "schema-org:description": "Bad token.\n",
            "schema-org:name": "401",
            "hydra:statusCode": "401"
          },
          {
            "@id": "amf://id#154",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "schema-org:name": "403",
            "hydra:statusCode": "403"
          }
        ]
      }
    },
    {
      "@id": "amf://id#166",
      "@type": [
        "doc:TraitFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#28",
        "@type": [
          "doc:Trait",
          "doc:AbstractDeclaration",
          "doc:DomainElement"
        ],
        "doc:dataNode": {
          "@id": "amf://id#112",
          "@type": "data:Object",
          "data:description": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "The collection of <<resourcePathName>>."
            }
          },
          "data:queryParameters": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
            "@type": "data:Object",
            "data:limit": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
              "@type": "data:Object",
              "data:default": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_10",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "25"
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Limit in the response list"
                }
              },
              "data:example": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_9",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "100"
                }
              },
              "data:maximum": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_7",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "300"
                }
              },
              "data:minimum": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1"
                }
              },
              "data:required": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_11",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "false"
                }
              },
              "data:type": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "number"
                }
              }
            },
            "data:nextPageToken": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19",
              "@type": "data:Object",
              "data:description": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_22",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
                }
              },
              "data:example": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_21",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                }
              },
              "data:pattern": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_23",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "[a-zA-Z0-9]+"
                }
              },
              "data:required": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_24",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "false"
                }
              },
              "data:type": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_20",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "string"
                }
              }
            },
            "data:start": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12",
              "@type": "data:Object",
              "data:default": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_17",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "0"
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_14",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The start entry of the list"
                }
              },
              "data:example": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_16",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "25"
                }
              },
              "data:minimum": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_15",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "0"
                }
              },
              "data:required": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_18",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "false"
                }
              },
              "data:type": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_13",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "number"
                }
              }
            }
          },
          "data:responses": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25",
            "@type": "data:Object",
            "data:200": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29",
                  "@type": "data:Object",
                  "data:properties": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31",
                    "@type": "data:Object",
                    "data:items": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_35",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Contains a list of objects for this method."
                        }
                      },
                      "data:items": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_36",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "<<resourceType>>"
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_34",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_33",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "array"
                        }
                      }
                    },
                    "data:nextPageToken": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_41",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                        }
                      },
                      "data:example": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_40",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_39",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_38",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "string"
                        }
                      }
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/scalar_30",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "object"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/scalar_27",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
                }
              }
            },
            "data:400": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_46",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid"
                    }
                  },
                  "data:properties": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48",
                    "@type": "data:Object",
                    "data:error": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_53",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Indicate that the response is errored."
                        }
                      },
                      "data:example": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_52",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_51",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_50",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "boolean"
                        }
                      }
                    },
                    "data:message": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_56",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The error message associated with the error."
                        }
                      },
                      "data:example": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_57",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_58",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_55",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "string"
                        }
                      }
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_47",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "object"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/scalar_43",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
                }
              }
            }
          }
        },
        "doc:variable": [
          "resourceType",
          "resourcePathName"
        ],
        "schema-org:name": "trait"
      },
      "doc:usage": "This trait is to be used when the resource is paginated that is the edpoint producses\na list of resources in the response.\nEvery paginated response contains a `nextPageToken` property that should be used in pagination\nto request for next page of the results and `items` which is a list of resources.\nThe `items` property is always defined, even if the response is empty. Therefore the `404`\nresponse in this case is not possible. Clients need to handle empty responses by their own.\nIt is crutial that the subsequent requests contain the same set of parameters (like `limit`\nor `start`) because if this values will change then the `nextPageToken` will be revalidated\nand pagination will start from the first page.\n"
    },
    {
      "@id": "amf://id#167",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#66",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": [
          {
            "@id": "amf://id#89",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#90",
              "@type": "data:Object",
              "data:available": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "data:etag": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "W\\d3deef3rgrgf4r"
                }
              },
              "data:id": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
                }
              },
              "data:name": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme Product"
                }
              },
              "data:quantity": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "200"
                }
              },
              "data:unit": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "data:upc": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "123456789101"
                }
              }
            },
            "schema-org:name": "example_0",
            "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\sd3deef3rgrgf4r\"\n"
          },
          {
            "@id": "amf://id#91",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#92",
              "@type": "data:Object",
              "data:available": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_7",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "data:etag": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "W/\"686897696a7c876b7e\""
                }
              },
              "data:id": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "d697f5cea85011e680f576304dec7eb7"
                }
              },
              "data:name": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Super product"
                }
              },
              "data:quantity": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "125"
                }
              },
              "data:unit": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "data:upc": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "123456789101"
                }
              }
            },
            "http://a.ml/vocabularies/document-source-maps#sources": {
              "@id": "amf://id#91/source-map",
              "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
              "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                "http://a.ml/vocabularies/document-source-maps#element": "amf://id#91",
                "http://a.ml/vocabularies/document-source-maps#value": "amf://id#93"
              }
            },
            "schema-org:name": "Product",
            "shacl:raw": "\n                id: d697f5cea85011e680f576304dec7eb7\n                name: Super product\n                quantity: 125\n                unit: ml\n                upc: \"123456789101\"\n                available: true\n                etag: \"W/\\\"686897696a7c876b7e\\\"\"\n"
          },
          {
            "@id": "amf://id#94",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#95",
              "@type": "data:Object",
              "data:available": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_7",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "data:etag": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "W/\"123456789\""
                }
              },
              "data:id": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "123e4567e89b12d3a456426655440000"
                }
              },
              "data:name": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme Product"
                }
              },
              "data:quantity": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1"
                }
              },
              "data:unit": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "kg"
                }
              },
              "data:upc": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "223456789101"
                }
              }
            },
            "http://a.ml/vocabularies/document-source-maps#sources": {
              "@id": "amf://id#94/source-map",
              "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
              "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                "http://a.ml/vocabularies/document-source-maps#element": "amf://id#94",
                "http://a.ml/vocabularies/document-source-maps#value": "amf://id#93"
              }
            },
            "schema-org:name": "OtherProduct",
            "shacl:raw": "\n                id: 123e4567e89b12d3a456426655440000\n                name: Acme Product\n                quantity: 1\n                unit: kg\n                upc: \"223456789101\"\n                available: true\n                etag: \"W/\\\"123456789\\\"\"\n"
          }
        ],
        "schema-org:description": "A single product representing an item in the store.",
        "schema-org:name": "A product resource",
        "shacl:closed": false,
        "shacl:name": "Product",
        "shacl:property": [
          {
            "@id": "amf://id#67",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#68",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#69",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#70",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "042100005264"
                  }
                },
                "shacl:raw": "042100005264"
              },
              "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "upc",
              "shacl:pattern": "^[0-9]{12,12}$"
            },
            "shacl:minCount": 1,
            "shacl:name": "upc",
            "shacl:path": {
              "@id": "data:upc"
            }
          },
          {
            "@id": "amf://id#30",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#31",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#71",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#72",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#73",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#74",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Acme product - mentol flavor, 500 ml."
                  }
                },
                "shacl:raw": "Acme product - mentol flavor, 500 ml."
              },
              "schema-org:description": "Product name",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#75",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#76",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "id",
              "shacl:pattern": "^[0-9a-zA-Z-]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#77",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#78",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#79",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#80",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "ml"
                  }
                },
                "shacl:raw": "ml"
              },
              "schema-org:description": "The unit of measuremet for the quantity property.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "unit"
            },
            "shacl:minCount": 1,
            "shacl:name": "unit",
            "shacl:path": {
              "@id": "data:unit"
            }
          },
          {
            "@id": "amf://id#81",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#82",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#83",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#84",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "true"
                  }
                },
                "shacl:raw": "true"
              },
              "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:name": "available"
            },
            "shacl:minCount": 1,
            "shacl:name": "available",
            "shacl:path": {
              "@id": "data:available"
            }
          },
          {
            "@id": "amf://id#85",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#86",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#87",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#88",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "500"
                  }
                },
                "shacl:raw": "500"
              },
              "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:name": "quantity"
            },
            "shacl:minCount": 1,
            "shacl:name": "quantity",
            "shacl:path": {
              "@id": "data:quantity"
            }
          }
        ]
      },
      "doc:references": {
        "@id": "amf://id#160",
        "@type": [
          "doc:DataType",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": {
          "@id": "amf://id#63",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Common properties for all resources returned by the API.\n",
          "shacl:closed": false,
          "shacl:name": "Resource",
          "shacl:property": {
            "@id": "amf://id#30",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#31",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          }
        }
      }
    },
    {
      "@id": "amf://id#160",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#63",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "schema-org:description": "Common properties for all resources returned by the API.\n",
        "shacl:closed": false,
        "shacl:name": "Resource",
        "shacl:property": {
          "@id": "amf://id#30",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#31",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        }
      }
    },
    {
      "@id": "amf://id#168",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#169",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"id\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"name\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"quantity\" type=\"xs:double\"></xs:element>\n        <xs:element name=\"unit\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"upc\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"available\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:string\"></xs:attribute>\n      <xs:attribute name=\"type\" type=\"xs:string\"></xs:attribute>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
      }
    },
    {
      "@id": "amf://id#170",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#171",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"false\" type=\"AppPerson\">\n  <id>Qawer63J73HJ6khjswuqyq62382jG21s</id>\n  <name>John Smith</name>\n  <birthday>1990-10-12</birthday>\n  <gender>male</gender>\n  <url>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s</url>\n  <image>\n    <url>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s/image</url>\n    <thumb>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s/image/thumb</thumb>\n  </image>\n  <tagline>Hi, I'm John!</tagline>\n  <language>en_US</language>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#172",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#156",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "security:name": "basic",
        "security:type": "Basic Authentication",
        "schema-org:description": "This API supports Basic Authentication for staging environment.\n"
      }
    },
    {
      "@id": "amf://id#173",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#174",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#175",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#176",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#177",
      "@type": [
        "doc:TraitFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#114",
        "@type": [
          "doc:Trait",
          "doc:AbstractDeclaration",
          "doc:DomainElement"
        ],
        "doc:dataNode": {
          "@id": "amf://id#115",
          "@type": "data:Object",
          "data:description": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Use this to mark a resource that can be changed only by users with admin level."
            }
          },
          "data:responses": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
            "@type": "data:Object",
            "data:200": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
              "@type": "data:Object",
              "data:headers": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
                "@type": "data:Object",
                "data:X-Amin-Resource": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                  "@type": "data:Object",
                  "data:default": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "false"
                    }
                  },
                  "data:description": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "This header is not set if the resource can be changed by non-admin users."
                    }
                  },
                  "data:displayName": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Admin resource mark header"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "boolean"
                    }
                  }
                }
              }
            },
            "data:401": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
              "@type": "data:Object",
              "data:description": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
                }
              }
            }
          }
        },
        "schema-org:name": "trait"
      },
      "doc:usage": "Some resources can be changed only by users with Admin clerance level. This resources will be\nmarked with the header `X-Admin-Resource` when requesting it. It means that every attemp to\nupdate the resource by non-admin user will result with 401 response.\n"
    },
    {
      "@id": "amf://id#159",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#47",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#48",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#49",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
        },
        "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
        "shacl:closed": false,
        "shacl:name": "image",
        "shacl:property": [
          {
            "@id": "amf://id#50",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#51",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#52",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#53",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
              "schema-org:name": "Thumbnail",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "thumb"
            },
            "shacl:minCount": 1,
            "shacl:name": "thumb",
            "shacl:path": {
              "@id": "data:thumb"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#178",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#179",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"false\" type=\"Product\">\n  <id>f2f7933a-a9ce-11e6-80f5-76304dec7eb7</id>\n  <name>Acme product - mentol flavor, 500 ml.</name>\n  <quantity>500</quantity>\n  <unit>ml</unit>\n  <upc>042100005264</upc>\n  <available>true</available>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#180",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#181",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#182",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#123",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:header": {
          "@id": "amf://id#124",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "header",
          "raml-http:paramName": "authorization",
          "raml-http:schema": {
            "@id": "amf://id#125",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#126",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#127",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ya.2453vfDb3cJHisdf.*&H"
                }
              },
              "http://a.ml/vocabularies/document-source-maps#sources": {
                "@id": "amf://id#126/source-map",
                "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                  "http://a.ml/vocabularies/document-source-maps#element": "amf://id#126",
                  "http://a.ml/vocabularies/document-source-maps#value": "amf://id#124"
                }
              },
              "shacl:raw": "ya.2453vfDb3cJHisdf.*&H"
            },
            "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
          "schema-org:name": "authorization",
          "hydra:required": false
        },
        "raml-http:parameter": {
          "@id": "amf://id#128",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "access_token",
          "raml-http:schema": {
            "@id": "amf://id#129",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
          "schema-org:name": "access_token",
          "hydra:required": false
        },
        "security:name": "oauth_2_0",
        "security:settings": {
          "@id": "amf://id#136",
          "@type": [
            "security:OAuth2Settings",
            "security:Settings",
            "doc:DomainElement"
          ],
          "security:accessTokenUri": "http://api.domain.com/oauth2/token",
          "security:authorizationGrant": [
            "authorization_code",
            "implicit"
          ],
          "security:authorizationUri": "http://api.domain.com/oauth2/auth",
          "security:scope": [
            {
              "@id": "amf://id#137",
              "@type": [
                "security:Scope",
                "doc:DomainElement"
              ],
              "security:name": "profile"
            },
            {
              "@id": "amf://id#138",
              "@type": [
                "security:Scope",
                "doc:DomainElement"
              ],
              "security:name": "email"
            }
          ]
        },
        "security:type": "OAuth 2.0",
        "schema-org:description": "This API supports OAuth 2.0 for authenticating all API requests.",
        "hydra:response": [
          {
            "@id": "amf://id#130",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#131",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#132",
                "@type": [
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "shacl:name": "schema"
              }
            },
            "schema-org:description": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user.",
            "schema-org:name": "401",
            "hydra:statusCode": "401"
          },
          {
            "@id": "amf://id#133",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#134",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#135",
                "@type": [
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "shacl:name": "schema"
              }
            },
            "schema-org:description": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here.",
            "schema-org:name": "403",
            "hydra:statusCode": "403"
          }
        ]
      }
    }
  ]
}